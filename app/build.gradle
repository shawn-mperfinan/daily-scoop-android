plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "com.google.devtools.ksp"
    id "dagger.hilt.android.plugin"
    id "de.mannodermaus.android-junit5"
}

android {

    namespace = "com.dailyscoop.app"

    compileSdk 34

    defaultConfig {

        applicationId "com.dailyscoop.app"

        minSdk 27

        targetSdk 34

        versionCode 1

        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments["runnerBuilder"] = "de.mannodermaus.junit5.AndroidJUnit5Builder"

        vectorDrawables {
            useSupportLibrary true
        }

        ksp {
            /**
             * The schemas directory contains a schema file for each version of the Room database.
             * This is required to enable Room auto migrations.
             * See https://developer.android.com/reference/kotlin/androidx/room/AutoMigration.
             */
            arg("room.schemaLocation", "$projectDir/schemas")

            /**
             * Enables Gradle incremental annotation processor.
             */
            arg("room.incremental", "true")
        }
    }

    // Initialize for property retrieval on variables defined in [local.properties]
    def localProperties = new Properties()
    localProperties.load(project.rootProject.file('local.properties').newDataInputStream())

    signingConfigs {
        release {
            storeFile file(localProperties.getProperty("KEY_STORE_PATH"))
            keyAlias localProperties.getProperty("KEY_STORE_ALIAS")
            storePassword localProperties.getProperty("KEY_STORE_PASSWORD")
            keyPassword localProperties.getProperty("KEY_STORE_KEY_PASSWORD")
        }
    }

    flavorDimensions += "type"
    productFlavors {
        dev {
            dimension "type"
            buildConfigField("String", "API_KEY", "\"${localProperties.getProperty("API_KEY")}\"")
        }

        live {
            dimension "type"
            buildConfigField("String", "API_KEY", "\"${localProperties.getProperty("API_KEY")}\"")
        }
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix = ".debug"
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    buildFeatures {
        compose true
        buildConfig true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.3"
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    // TODO: configure testOptions for junit5
}

dependencies {

    // TODO: place to libs.version via .toml extension

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material3:material3:1.1.2"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.2"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2"
    // TODO: this will be needed in order to support multiple screen densities
    // implementation "androidx.compose.material3:material3-window-size-class:1.1.1"

    implementation "androidx.activity:activity-ktx:1.8.0"
    implementation "androidx.activity:activity-compose:1.8.0"

    // Navigation Compose
    implementation "androidx.navigation:navigation-compose:2.7.4"

    // Hilt dependencies
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    ksp "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    // TODO: update this to latest when resumed working with network api calls
    implementation "com.google.code.gson:gson:2.9.1"
    implementation "com.squareup.okhttp3:logging-interceptor:4.10.0"

    // Room
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    ksp "androidx.room:room-compiler:$room_version"

    // MockWebserver
    testImplementation("com.squareup.okhttp3:mockwebserver:4.10.0")

    // Writing and executing Unit Tests on the JUnit 5 Platform
    // Stay tuned for official google android support for JUnit 5
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.3")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.3")

    // Needed for unit testing
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"

    // Room test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // Test Assertion
    testImplementation "com.google.truth:truth:1.1.3"

    // Turbine
    testImplementation "app.cash.turbine:turbine:0.12.1"

    // JUnit 5 instrumentation test dependencies
    androidTestImplementation("org.junit.jupiter:junit-jupiter-api:5.9.3")
    androidTestImplementation("de.mannodermaus.junit5:android-test-core:1.3.0")
    androidTestRuntimeOnly("de.mannodermaus.junit5:android-test-runner:1.3.0")

    androidTestImplementation("androidx.test:runner:1.5.2")
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}
